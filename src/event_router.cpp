// event_router.cpp

#include "event_router.h"
#include "ble_handler.h"
#include <ArduinoJson.h>
#include "config.h"

void initEventBus() {
    BUS_SERIAL.begin(BUS_BAUD_RATE);
    DEBUG_PRINTLN("üöå Event bus initialized (Serial1 @ 9600)");
}

void sendResponse(const char* requestId, const char* status, const char* message, JsonDocument& additional) {
    if (!pCharacteristic || !deviceConnected) return;

    StaticJsonDocument<JSON_BUFFER_SIZE> response;
    response["id"] = requestId;
    response["status"] = status;
    response["message"] = message;

    // –ö–æ–ø–∏—Ä—É–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è, –µ—Å–ª–∏ –µ—Å—Ç—å
    for (JsonPair kv : additional.as<JsonObject>()) {
        response[kv.key()] = kv.value();
    }

    String jsonResponse;
    serializeJson(response, jsonResponse);

    pCharacteristic->setValue(jsonResponse.c_str());
    pCharacteristic->notify();

    DEBUG_PRINT("üì§ Sent BLE Response: ");
    DEBUG_PRINTLN(jsonResponse);
}

void routeEventToBus(const char* requestId, const char* moduleName, const char* eventName, JsonObject& payload) {
    // üì¶ –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —à–∏–Ω—ã
    StaticJsonDocument<JSON_BUFFER_SIZE> busMessage;
    busMessage["source"] = "BLE_GATEWAY";
    busMessage["moduleName"] = moduleName;
    busMessage["eventName"] = eventName;
    busMessage["payload"] = payload;

    // üß∑ –î–æ–±–∞–≤–ª—è–µ–º requestId –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
    busMessage["requestId"] = requestId;

    String serialized;
    serializeJson(busMessage, serialized);

    // üöå –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —à–∏–Ω—É (–≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ ‚Äî Serial1)
    BUS_SERIAL.println(serialized);
    DEBUG_PRINT("üöå Routed to bus: ");
    DEBUG_PRINTLN(serialized);

    // ‚úÖ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ BLE
    sendResponse(requestId, "success", "Event routed to bus");
}